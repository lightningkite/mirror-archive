//Generated by Lightning Kite's Mirror plugin
//AUTOMATICALLY GENERATED AND WILL BE OVERRIDDEN IF THIS MESSAGE IS PRESENT
package com.lightningkite.mirror.archive.model

import com.lightningkite.mirror.info.FieldInfo
import com.lightningkite.mirror.info.*
import kotlin.reflect.KClass

@Suppress("RemoveExplicitTypeArguments", "UNCHECKED_CAST", "USELESS_CAST")
object SortClassInfo : ClassInfo<Sort<*>> {

    override val kClass: KClass<Sort<*>> = Sort::class
    override val modifiers: List<ClassInfo.Modifier> = listOf(ClassInfo.Modifier.Interface)
    override val companion: Any? get() = null

    override val implements: List<Type<*>> = listOf(Type<Comparator<Any?>>(Comparator::class, listOf(TypeProjection(Type<Any?>(Any::class, listOf(), false), TypeProjection.Variance.INVARIANT)), false))

    override val packageName: String = "com.lightningkite.mirror.archive.model"
    override val owner: KClass<*>? = null
    override val ownerName: String? = null

    override val name: String = "Sort"
    override val annotations: List<AnnotationInfo> = listOf()
    override val enumValues: List<Sort<*>>? = null


    override val fields: List<FieldInfo<Sort<*>, *>> = listOf()

    override fun construct(map: Map<String, Any?>): Sort<Any?> = throw NotImplementedError()

}
